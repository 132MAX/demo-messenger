{"version":3,"sources":["components/Footer/Footer.module.scss","components/Users/Pagination.tsx","components/Users/Users.js","redux/users-selector.js","components/Users/UsersContainer.jsx","api/api.js","components/Dialog/Dialog.module.scss","components/Header/HeaderMenu.jsx","redux/auth-reducer.ts","components/Header/HeaderComponent.js","components/Header/Header.jsx","components/Navbar/Navbar.jsx","components/common/FormControls/FormControls.js","utils/validators.js","components/Profile/ProfileInfo/ProfileDataForm.js","components/Profile/ProfileInfo/ProfileStatus.js","redux/profile-reducer.ts","components/Profile/Post/Post.jsx","FormsControls/FormsControls.js","components/Profile/Post/MyPosts.js","components/Profile/Post/MyPostsContainer.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/Profil.jsx","components/Profile/ProfileContainer.js","components/Dialog/DilogsItem/DilogsItem.js","components/Dialog/Message/Message.js","components/Dialog/WhotoFollow/WhoToFollow.js","components/Dialog/Dialog.js","components/Login/LoginContainer.js","redux/app-reducer.ts","components/Footer/Footer.js","redux/dialogs-erducer.ts","components/Dialog/DialogContainer.js","App.js","redux/sidebar-reducer.js","redux/redux-store.js","index.js","components/Profile/MyPost.module.scss","FormsControls/FormsControls.module.scss","components/common/Prealoader/Prealoader.js","redux/users-reducer.ts","components/hoc/withAuthRedirect.js","components/Users/users.module.scss","components/Navbar/Navbar.module.scss","components/common/FormControls/FormsControls.module.scss"],"names":["module","exports","Pagination","portioNumber","setPortioNumber","leftPortinPageNumber","rightPortinPageNumber","onPageChanged","curentPage","pages","portionCount","className","cn","s","pagination","Button","onClick","size","style","background","marginRight","borderColor","display","ButtonGroup","filter","p","map","e","marginLeft","Users","props","pageCount","Math","ceil","totalUsersCount","pageSize","i","push","useState","Container","fluid","Row","Col","md","use","u","user","to","id","photo","src","photos","small","name","followed","variant","disabled","followingInP","some","unfollow","follow","getUser","state","usersPage","users","getPageSize","getTotalUsersCount","getCurentPage","getIsFetching","isFetching","getFollowingInProgresse","followingInProgress","getIsAuth","auth","isAuth","UsersContainer","pageNum","getUsers","this","Prealoader","React","Component","compose","connect","curentPages","toggleIsFetchingProgress","withAuthRedirect","instance","axios","create","withCredentials","baseURL","headers","usersAPI","pcurentPage","get","then","response","data","userId","post","delete","getProfile","console","log","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","HeaderMenu","Form","setExpanded","type","placeholder","Nav","Link","href","SET_USER_DATA","GET_CAPTCHA_URL_SUCCESS","initialState","captchaUrl","setAuthUserData","payload","getAuth","dispatch","resultCode","getCaptchaURL","a","captchaURL","url","authReduser","action","HeaderComponent","Header","expanded","Navbar","expand","bg","Brand","alt","Toggle","Collapse","collapsed","maxHeight","navbarScroll","classes","myId","useSelector","myProfile","profilePage","myLogin","myImage","usersId","useParams","elem","link","conteiner","conteiner__elem","navData","isActive","active","FormControl","input","meta","touched","error","children","hasError","formControl","oleg","Textarea","restProps","child","Input","createFild","validator","component","text","Field","validate","required","value","maxLength","max","length","undefined","ProfileDataFormReduxForm","reduxForm","form","enableReinitialize","onSubmit","handleSubmit","Object","keys","contacts","ProfileStatus","editMode","setEditMode","setStatus","useEffect","onChange","target","onBlur","onDoubleClick","ADD_POST","SET_USER_PROFILE","SET_STATUS","SAVE_PHOTO_SUCCESS","messag","likes","newPostText","getUserProfile","getUserStatus","prolileReducer","newPost","Post","marginTop","Avatar","color","margin","maxLength10","PostsFormRedux","profilText","MyPosts","addPost","posts","index","MyPostsContainer","addPostActionCreator","ProfileData","myElemId","elemId","toEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","idUser","order","offset","profilImg","large","profil","files","form_control","fontWeight","fontSize","whiteSpace","write","container_blok","initialValues","Profil","file","getState","stopSubmit","_error","messages","useDispatch","DilogsItem","path","dialog","numID","setNumId","class","Message","message","messege","WhoToFollow","padding","whoToFollow","paddingRight","maxLength50","LoginDialogForm","onSubmitSuccess","result","reset","Dialog","messagesPage","messageElement","dialogElement","dialogs","lg","dialogs__items","ElemwhoToFollow","span","sendMessage","newMessageBody","LoginReduxForm","formSumaryEror","INITIALIZED_SUCCESS","initialized","appReduser","elemText","title","reference","Footer","footer","sm","r","copyright","SEND_MESSAGE","dialogReducer","body","sendMesssageCreator","loadable","app","initializApp","promise","Promise","all","element","exact","DialogContainer","intialState","sidebarReducer","reducers","combineReducers","sidebar","userReduser","formReducer","composedEnhancer","composeWithDevTools","applyMiddleware","thunkMiddleware","store","createStore","window","ReactDOM","render","document","getElementById","FOLLOW","UNFOLLOW","SET_USERS","CURENT_PAGE","USERS_COUNT","TOGLE_IS_FETCHING","TOGLE_IS_FETCHING_PROGRESS","followSucces","unfollowSucces","num","toggleIsFetching","items","totalCount","RedirectComponent"],"mappings":"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","file":"static/js/main.44dcc187.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__7dIj9\",\"copyright\":\"Footer_copyright__2wqDr\"};","\n\nimport React from 'react'\nimport cn from 'classnames'\nimport s from './users.module.scss'\nimport { Button, ButtonGroup } from \"react-bootstrap\";\n\n\ntype Props = {\n    portioNumber: number\n    setPortioNumber: any\n    leftPortinPageNumber: number\n    rightPortinPageNumber: number\n    onPageChanged: () => void\n    curentPage: number\n    portionCount: number\n    pages: any\n}\n\nlet Pagination: React.FC<Props> = ({ portioNumber, setPortioNumber, leftPortinPageNumber, rightPortinPageNumber,\n    onPageChanged, curentPage, pages, portionCount }) => {\n    return (\n        <div className={cn(s.pagination)} >\n            <div className=\"\">\n                {portioNumber > 1 &&\n                    <Button onClick={() => setPortioNumber(portioNumber - 1)} size=\"sm\"\n                        style={{ background: 'rgba(28, 117, 188, 0.8)', marginRight: 10, borderColor: 'rgba(28, 117, 188, 0.8)' }}>  prev</Button>}\n            </div>\n            < span style={{ display: 'flex' }} >\n                <ButtonGroup size=\"sm\">                \n                    {// @ts-ignore\n                    pages.filter(p => p >= leftPortinPageNumber && p <= rightPortinPageNumber).map(p => {\n                        // @ts-ignore    \n                        return <Button className={curentPage === p && s.curentPage}\n                                style={{ background: 'rgba(28, 117, 188, 0.8)', borderColor: 'rgba(28, 117, 188, 0.8)' }}\n                                // @ts-ignore\n                                onClick={(e) =>onPageChanged(p)} key={p} > {p}\n                            </Button>\n                        })\n                    }\n                </ButtonGroup>\n            </span>\n            <div className=\"\">\n                {portioNumber < portionCount &&\n                    <Button onClick={() => setPortioNumber(portioNumber + 1)} size=\"sm\" style={{ background: 'rgba(28, 117, 188, 0.8)', marginLeft: 10, borderColor: 'rgba(28, 117, 188, 0.8)' }}>   next</Button>}\n            </div>\n        </div>\n\n    )\n}\n\nexport default Pagination\n\n\n\n// @ts-nocheck","import React, { useState } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { Col, Row, Container, Button, FormControl, ButtonGroup } from \"react-bootstrap\";\nimport s from './users.module.scss'\nimport Pagination from './Pagination';\n\nlet Users = (props) => {\n    let pageCount = Math.ceil(props.totalUsersCount / props.pageSize)\n    let pages = []\n    for (let i = 1; i <= pageCount; i++) {\n        pages.push(i)\n    }\n    let portionCount = Math.ceil(pageCount / 10)\n    const [portioNumber, setPortioNumber] = useState(1);\n    let leftPortinPageNumber = (portioNumber - 1) * 10 + 1\n    let rightPortinPageNumber = portioNumber * 10\n    return (\n        <Container fluid >\n            <Row className=' justify-content-between mt-1' >\n                <Col md=\"9\">\n                    {props.use.map(u => < div key={u.id} className={s.user}>\n                        <NavLink to={'/profile/' + u.id} >\n                            <img className={s.photo} src={u.photos.small != null ? u.photos.small : 'https://tvoyaparallel.ru/wp-content/uploads/2014/09/%D0%9C%D0%B8%D0%BD%D0%B8%D0%B0%D1%82%D1%8E%D1%80%D0%B03.jpg'} />\n                            <  div > {u.name} </div>\n                        </NavLink>\n                        <div > {u.followed ?\n                            <Button variant=\"outline-primary\" disabled={props.followingInP.some(id => id === u.id)}\n                                onClick={() => { props.unfollow(u.id) }} >Отписаться\n                            </Button> :\n                            <Button variant=\"outline-primary\" disabled={props.followingInP.some(id => id === u.id)} onClick={() => { props.follow(u.id) }} > Добавить\n                            </Button>}\n                        </div>\n                    </div >\n                    )}\n                    <Pagination\n                        pages={pages}\n                        portioNumber={portioNumber}\n                        setPortioNumber={setPortioNumber}\n                        portionCount={portionCount}\n                        leftPortinPageNumber={leftPortinPageNumber}\n                        rightPortinPageNumber={rightPortinPageNumber}\n                        pages={pages}\n                        {...props}\n                         />\n                </Col>\n                <Col></Col>\n            </Row>\n        </Container >\n    )\n}\n\nexport default Users","export const getUser = (state) => {\n    return state.usersPage.users\n}\n\nexport const getPageSize = (state) => {\n    return state.usersPage.pageSize\n}\n\nexport const getTotalUsersCount = (state) => {\n    return state.usersPage.totalUsersCount\n}\n\nexport const getCurentPage = (state) => {\n    return state.usersPage.curentPage\n}\n\nexport const getIsFetching = (state) => {\n    return state.usersPage.isFetching\n}\n\nexport const getFollowingInProgresse = (state) => {\n    return state.usersPage.followingInProgress\n}\n\nexport const getIsAuth = (state) => {\n    return state.auth.isAuth\n}\n// let mapStateToProps = (state) => {\n//     return {\n//         use: state.usersPage.users,\n//         pageSize: state.usersPage.pageSize,\n//         totalUsersCount: state.usersPage.totalUsersCount,\n//         curentPage: state.usersPage.curentPage,\n//         isFetching: state.usersPage.isFetching,\n//         followingInP:state.usersPage.followingInProgress,\n//         isAuth:state.auth.isAuth// передаем залогинин ли Я\n//     }\n// }","import React from 'react'\nimport { connect } from 'react-redux'\nimport {  curentPages, follow,  unfollow, toggleIsFetchingProgress, getUsers} from '../../redux/users-reducer'\nimport Users from './Users';\nimport Prealoader from '../common/Prealoader/Prealoader';\nimport { compose } from 'redux'\nimport { withAuthRedirect } from '../hoc/withAuthRedirect'; // если не авторизован шлет на авторизацию\nimport { getUser,getPageSize,getTotalUsersCount,getCurentPage,getIsFetching, getFollowingInProgresse,getIsAuth } from '../../redux/users-selector';\n\nclass UsersContainer extends React.Component {\n\n    componentDidMount() {\n        // this.props.toggleIsFetching(true)\n        this.props.getUsers(this.props.curentPage,  this.props.pageSize)\n            // .then(data => {\n            //     this.props.toggleIsFetching(false)\n            //     this.props.setUsers(data.items);\n            //     this.props.setTotalUsersCount(data.totalCount)\n            // })\n    }\n    onPageChanged = (pageNum) => {\n       this.props.getUsers(pageNum,  this.props.pageSize)\n\n    }\n    render() {\n\n        return <>\n        {this.props.isFetching ?<Prealoader/>: ''}\n            <Users\n                totalUsersCount={this.props.totalUsersCount}\n                pageSize={this.props.pageSize}\n                onPageChanged={this.onPageChanged}\n                curentPage={this.props.curentPage}\n                use={this.props.use}\n                unfollow={this.props.unfollow}\n                follow={this.props.follow}\n                followingInP={this.props.followingInP}\n            />\n        </>\n    }\n}\nlet mapStateToProps = (state) => {\n    return {\n        use: getUser(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        curentPage: getCurentPage(state),\n        isFetching: getIsFetching(state),\n        followingInP:getFollowingInProgresse(state),\n        isAuth:getIsAuth(state)// передаем залогинин ли Я\n    }\n}\n// let mapStateToProps = (state) => {\n//     return {\n//         use: state.usersPage.users,\n//         pageSize: state.usersPage.pageSize,\n//         totalUsersCount: state.usersPage.totalUsersCount,\n//         curentPage: state.usersPage.curentPage,\n//         isFetching: state.usersPage.isFetching,\n//         followingInP:state.usersPage.followingInProgress,\n//         isAuth:state.auth.isAuth// передаем залогинин ли Я\n//     }\n// }\n// let mapDispatchToProps = (dispatch) => {\n//     return {\n//         follow: (userId) => {\n//             dispatch(followAC(userId))\n//         },\n//         unfollow: (userId) => {\n//             dispatch(unfollowAC(userId))\n//         },\n//         setUsers: (user) => {\n//             dispatch(setUsersAC(user))\n//         },\n//         curentPages: (num) => {\n//             dispatch(curentPageAC(num))\n//         },\n//         setTotalUsersCount: (totalCount) => {\n//             dispatch(totalUsersCountAC(totalCount))\n//         },\n//         toggleIsFetching:(isFetching)=>{\n//             dispatch(toggleIsFetchingAC(isFetching))\n//         }\n//     }\n// }\n\nexport default compose (\n    connect(mapStateToProps, {\n        follow,\n        unfollow,\n        curentPages,\n        toggleIsFetchingProgress,\n        getUsers\n    }),\n    withAuthRedirect)(UsersContainer)      // withAuthRedirect  если не авторизован шлет на авторизацию","import axios from \"axios\";\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\n    headers: {\n        'API-KEY': 'ce58725c-b18c-4d8f-8605-6a7c69e7e189'\n    }\n})\n\nexport const usersAPI = {\n    getUsers(pcurentPage = 1, pageSize = 10) {\n        return instance.get(`users?page=${pcurentPage}&count=${pageSize}`,\n            { withCredentials: true })\n            .then(response => {\n                return response.data\n            })\n    },\n    follow(userId) {\n        return instance.post(`follow/${userId}`)\n    },\n    unfollow(userId) {\n        return instance.delete(`follow/${userId}`)\n    },\n\n    getProfile(userId) {\n        console.log('Obsolete metod. Plase profileAPI object')\n        return profileAPI.getProfile(userId)\n    }\n}\n\nexport const profileAPI = {\n    getProfile(userId) {\n        return instance.get(`profile/` + userId)\n    },\n    getStatus(userId) {\n        return instance.get(`/profile/status/` + userId)\n    },\n    updateStatus(status) {\n        return instance.put(`/profile/status/`, { status: status })\n    },\n    savePhoto(photoFile) {\n        let formData = new FormData()          //отправляю фото (файлы)\n        formData.append(\"image\", photoFile)\n        return instance.put(`/profile/photo/`, formData, {\n            headers: {\n                'Content-Type': 'multipat/form-data'\n            }\n        })\n    },\n    saveProfile(profile) {\n        return instance.put(`/profile`, profile) ////отправляю  текст\n    },\n}\n\n\nexport const authAPI = {\n    me() {\n        return instance.get(`auth/me`)\n    },\n    login(email, password, rememberMe = false ,captcha= null) {\n        return instance.post(`auth/login`, { email, password, rememberMe ,captcha})\n    },\n    logout() {\n        return instance.delete(`auth/login`)\n    }\n}\n\nexport const securityAPI = {\n    getCaptchaUrl() {\n        return instance.get(`/security/get-captcha-url`)\n    }\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialog_dialogs__204KS\",\"active\":\"Dialog_active__2IlEu\",\"dialog\":\"Dialog_dialog__1V2Xk\",\"message\":\"Dialog_message__3rt8q\",\"dialogs__items\":\"Dialog_dialogs__items__13YkI\",\"messages\":\"Dialog_messages__1RouV\",\"profilText\":\"Dialog_profilText__2Akmv\",\"whoToFollow\":\"Dialog_whoToFollow__1se_X\",\"ElemwhoToFollow\":\"Dialog_ElemwhoToFollow__1vck1\"};","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { Navbar, Container, Nav, NavDropdown, FormControl, Form, Button } from \"react-bootstrap\";\n\nfunction HeaderMenu(props) {\n  let onClick = () => {\n    props.logout()\n    props.setExpanded(false)\n  }\n  return (\n    <div className=\"d-flex justify-content-between  align-items-center\">\n\n      <Form className=\"d-flex\">\n        <FormControl\n          onClick={() => props.setExpanded(true)}\n          type=\"search\"\n          placeholder=\" Поиск\"\n          className=\"me-2\"\n        />\n        <Button variant=\"warning\" className=\"text-white\" onClick={() => props.setExpanded(false)}> Поиск</Button>\n      </Form>\n      <Nav.Link href=\"#action1\" className=\"text-white\" onClick={() => props.setExpanded(false)}>Домой</Nav.Link>\n      <Nav.Link href=\"#i\" className=\"text-white\" onClick={() => props.setExpanded(false)}>\n        {props.isAuth && <div style={{ display: 'flex' }}>\n          <a>{props.login}</a>\n\n        </div>}\n      </Nav.Link>\n      {props.isAuth ? <Nav.Link className=\"text-white text-nowrap\" onClick={onClick}\n      >Выйти   </Nav.Link> : <NavLink to={`/login`} className=\"text-white\" onClick={() => props.setExpanded(false)}>\n        Вoйти\n      </NavLink>}\n    </div>\n  )\n}\n\nexport default HeaderMenu\n","import { authAPI, securityAPI } from \"../api/api\"\n//  \"@ts-ignore\"\nimport {stopSubmit} from 'redux-form' \n\nconst SET_USER_DATA = 'SET-USER-DATA'\nconst GET_CAPTCHA_URL_SUCCESS = 'GET-CAPTCHA-URL-SUCCESS'\nexport type  initialStateType = {\n    id: number | null ,   //  number или null \n    email: string | null ,\n    login:  string | null,\n    isAuth: boolean,\n    captchaUrl: string | null\n}\nlet initialState = {\n    id: null as number | null,  // воспринимай null  как number bkb null\n    email: null as string | null,\n    login: null as string | null,\n    isAuth: false,\n    captchaUrl:null as string | null\n}\n//export type  initialStateType = typeof initialState   // сделай тип проверки взяв изначально из state\nconst authReduser = (state = initialState, action:any):initialStateType => {\n    switch (action.type) {\n        case SET_USER_DATA: {\n            return {\n                ...state,\n                ...action.payload,\n                // id: action.id,\n                // email: action.email,\n                // login: action.login\n            }\n        }\n        case GET_CAPTCHA_URL_SUCCESS:{\n            return{\n                ...state,\n                captchaUrl: action.url\n            }\n        }\n        default:\n            return state\n    }\n}\ntype setAuthUserDataActionPayloadType={\n    id:number|null, email:string|null, login:string|null, isAuth:boolean\n}\ntype setAuthUserDataActionType={\n    type: typeof SET_USER_DATA\n    payload:setAuthUserDataActionPayloadType\n}\nexport const setAuthUserData = (id:number|null, email:string|null, login:string|null, isAuth:boolean):setAuthUserDataActionType => ({ type: SET_USER_DATA, \n    payload:{id, email, login, isAuth} })\ntype getCapthaUrlSuccessActionType ={\n    type: typeof GET_CAPTCHA_URL_SUCCESS\n    payload: {url: string }              //  url является строкой\n}\nexport const getCapthaUrlSuccess = (url:string):getCapthaUrlSuccessActionType => ({ type: GET_CAPTCHA_URL_SUCCESS,payload:{ url } })\nexport const getAuth=()=>{\n    return(dispatch:any)=>{\n        authAPI.me()\n        .then(response =>{\n                if(response.data.resultCode === 0){\n                    let { email, id, login  } = response.data.data \n                    dispatch(setAuthUserData( id, email, login, true ))\n                    }else{\n                      //  dispatch(setAuthUserData( ))\n                    }\n        })\n    }\n}\n\nexport const login=(email:string , password:string, rememberMe:boolean ,captcha:any)=>{\n        return(dispatch:any)=>{\n          authAPI.login(email , password, rememberMe, captcha)\n        .then(response =>{\n                if(response.data.resultCode === 0){\n                dispatch(getAuth())           \n                }else{\n                    if (response.data.resultCode === 10){\n                        dispatch(getCaptchaURL())\n                    }\n                    let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Sone error'\n                    dispatch(stopSubmit('login', {_error:message}))\n                 //   return Promise.reject(response.data.message[0])\n                }\n        })\n    }\n}\n\nexport const logout=()=>{\n    return(dispatch:any)=>{\n        authAPI.logout()\n        .then(response =>{\n                if(response.data.resultCode === 0){\n                dispatch(setAuthUserData(null ,null, null, false))\n                    \n                \n                }\n        })\n    }\n}\n\nexport const getCaptchaURL = () => async (dispatch:any) => {\n    const response = await securityAPI.getCaptchaUrl()\n    const captchaURL = response.data.url \n        dispatch(getCapthaUrlSuccess(captchaURL))\n    }\n\nexport default authReduser\n\n\n\n\n\n","import axios from 'axios'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport HeaderMenu from './HeaderMenu'\nimport { logout ,} from './../../redux/auth-reducer';\n\nexport class HeaderComponent extends Component {\n    render() {\n        return (\n            <HeaderMenu {...this.props}/>\n        )\n    }\n}\nconst mapStateToProps=(state)=>({\n    isAuth:state.auth.isAuth,\n    login:state.auth.login\n})\nexport default connect(mapStateToProps,{ logout}) (HeaderComponent)\n","import React, { useState } from 'react'\nimport { Navbar, Container, Nav } from \"react-bootstrap\";\nimport './Header.css'\nimport HeaderComponent from './HeaderComponent';\n//false| true| 'sm'| 'md'| 'lg'| 'xl'|'xxl'\nfunction Header() {\n  const [expanded, setExpanded] = useState(false);\n  return (\n    <div >\n\n      <Navbar expand=\"md\" expanded={expanded} bg=\"dark \" className='header'>     {/* //сварачивает при expand */}\n        <Container fluid=\"lg\" >                 {/* растикается при fluid */}\n          <Navbar.Brand href=\"#\"> <img src=\"https://themified.com/friend-finder/images/logo.png\" alt=\"\" /></Navbar.Brand>\n          <Navbar.Toggle onClick={() => setExpanded(expanded ? false : \"expanded\")}\n            aria-controls=\"navbarScroll\" \n            /> {/* ИКОНКА */}\n          <Navbar.Collapse id=\"navbarScroll\" className='flex-grow-0' collapsed>\n            <Nav\n              className=\"me-auto my-1 flex-grow-0 \"\n              style={{ maxHeight: '100px' }}\n              navbarScroll\n\n            >\n              <HeaderComponent  \n              setExpanded={setExpanded}\n              />\n\n            </Nav>\n\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n\n\n\n\n\n      {/* <div className={s.conteiner} style={{ color: 'red' }}>\n       \n           \n      </div> */}\n\n    </div>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { Navigate} from \"react-router-dom\";\nimport { NavLink } from 'react-router-dom'\nimport s from './Navbar.module.scss'\nimport { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nfunction Navbar({classes}) {\n    let img = 'https://tvoyaparallel.ru/wp-content/uploads/2014/09/%D0%9C%D0%B8%D0%BD%D0%B8%D0%B0%D1%82%D1%8E%D1%80%D0%B03.jpg'\n    const myId = useSelector((state) => state.auth.id)\n    const myProfile = useSelector((state) => state.profilePage.profile)\n    const myLogin = useSelector((state) => state.auth.login)\n    let myImage = null\n    let usersId = null\n    // const myImage = useSelector((state) => state.profilePage.profile.photos.small)\n    let { userId } = useParams();\n    if (!userId) {\n        userId = myId\n    }  \n   if(myProfile != null){ myImage =myProfile.photos.small }\n   if(myProfile != null){ usersId= myProfile.userId }\n  const elem = [{\n      link:'/profile/' + userId,\n      name:'Профиль'\n  },{\n    link:'/dialog',\n    name:'Мессенджер'\n},{\n    link:'/news',\n    name:'Новости'\n},{\n    link:'/users',\n    name:'Пользователи'\n}]\n    return (\n        <div className={s.conteiner}>\n            <div className={s.conteiner__elem}>\n                {myId == usersId && <img src={myImage || img} />}\n                           <h4 >{myLogin}</h4>\n            </div>\n            {elem.map(e=>(<NavLink to={e.link} key={e}\n            className={(navData) => navData.isActive ? s.active: \"\" }  \n          >\n                {e.name}\n            </NavLink>\n            ))}\n        </div>\n    )\n}\n\nexport default Navbar\n","\nimport { Field } from 'redux-form'\nimport s from './FormsControls.module.scss'\nconst FormControl = ({ input, meta:{touched, error}, children }) => {\n     const hasError = touched && error \n    return  <div className={s.formControl +' '+ (hasError && s.error )} >\n        <div className={s.oleg} >\n            {children}\n        </div>\n        {hasError && <span>{error}</span>}\n    </div>\n}\nexport const Textarea = (props) => {\n    const { input, meta, child, ...restProps } = props\n    return     <FormControl {...props}><textarea {...input }{ ...restProps }/> </FormControl>\n}\n\nexport const Input = (props) => {\n    const { input, meta, child, ...restProps } = props\n    return     <FormControl {...props}><input {...input }{ ...restProps }/> </FormControl>\n}\n\nexport const createFild = (placeholder, name, validator, component, props = {}, text = '') => (//props -передаю type= text/email .....\n    <div className=\"\">\n\n        <Field\n            placeholder={placeholder}\n            name={name}\n            validate={validator}\n            component={component}\n            {...props}\n        />{text}\n    </div>\n)","export const required = value => {\n    if (value ) return undefined;\n    return  'Fild is required'\n    // if (!value.posts) return console.log('Fild is required')\n    // if (value.posts ) return undefined;\n}\n\nexport const maxLength =  max=> value =>{\n    return value.length > max ?   `Must be ${max} characters or less` : undefined\n    // return value && value.length > max ?  console.log(`Must be ${max} characters or less`) : undefined\n}","import React from 'react';\nimport { Button } from \"react-bootstrap\";\n\nimport { createFild, Input, Textarea } from '../../common/FormControls/FormControls';\n//import { Input } from './../../../FormsControls/FormsControls';\nimport { Field, reduxForm } from 'redux-form'\nimport { required } from '../../../utils/validators';\n\nfunction ProfileDataForm(props) {\n    return <form  onSubmit={props.handleSubmit}>\n         {props.error && <div >{props.error}</div>}\n         <Button variant=\"outline-primary\" >Сохранить</Button>\n        <p>\n            <b> Имя</b>: {createFild('Имя', 'fullName', [required], Input)}\n        </p>\n        <p>\n        Ищу работу :{createFild('', 'lookingForAJob', [], Input, { type: 'checkbox' })}\n\n        </p>\n        <p>\n    Описание работы:{createFild(' Описание работы', 'lookingForAJobDescription', [required], Input )}\n\n        </p>\n               <p>\n            <b> Обо мне</b>: {createFild('обо мне', 'aboutMe', [required], Textarea, )}\n        </p>\n        <p>\n            <b> Contacts</b> : {Object.keys(props.profile.contacts).map(e => {\n                return <div className=\"\">\n                    <span>{e}</span>:\n                    {createFild(e, 'contacts.'+e, [], Input)}\n                </div>\n            })}\n        </p>\n    </form>\n}\nconst Contact = ({ contactTitle, contactValue }) => {\n    return <div className=\"\">- <b>{contactTitle}</b>: {contactValue}</div>\n}\n\n\nconst ProfileDataFormReduxForm = reduxForm({\n    form: 'edit-profile',\n    enableReinitialize: true\n})(ProfileDataForm)\nexport default ProfileDataFormReduxForm;","import React, { useState, useEffect } from 'react'\nimport Prealoader from '../../common/Prealoader/Prealoader'\n\n\n\nconst ProfileStatus = (props) => {\n    const [editMode, setEditMode] = useState(false)\n    const [status, setStatus] = useState(props.status);\n    useEffect(()=>{\n        setStatus(props.status)\n  },[props.status]  )\n    let activateEditMode=()=>{\n        setEditMode(!editMode)\n     props.updateStatus(status)\n    }\n     let onStatus=(e)=>{\n         setStatus(e.target.value)\n         console.log(status);\n     }\n    let component\n    if (!props.profile) {\n        component = <Prealoader />\n    } else {\n        component = <div>\n            {!editMode ?\n           \n                <h4  onDoubleClick={()=>setEditMode(true)} >\n                    {props.status || '===='}\n                    </h4> :\n                <input type=\"text\" placeholder={props.status } onChange={onStatus} onBlur={activateEditMode}  />\n            }\n        </div>\n    }\n    return (\n        <div>\n            {component}\n        </div>\n    )\n}\n\nexport default ProfileStatus\n","import { stopSubmit } from \"redux-form\"\nimport { profileAPI, usersAPI } from \"../api/api\"\n\nconst ADD_POST = 'ADD-POST'\nconst SET_USER_PROFILE = 'SET-USER-PROFILE'\nconst SET_STATUS = 'SET-STATUS'\nconst SAVE_PHOTO_SUCCESS = 'SAVE-PHOTO-SUCCESS'\ntype PostType ={\n    id:number\nmessag:string\nlikes:number\n}\nlet initialState = {\n    post: [\n        { id: 1, messag: 'Hi', likes: 1 },\n        { id: 2, messag: 'It s my first post', likes: 7 }\n    ] as Array<PostType>,\n    profile: null,\n    status: '',\n    newPostText: ''\n}\nexport type initialStateType = typeof initialState\nconst prolileReducer = (state = initialState, action:any):initialStateType => {\n    switch (action.type) {\n        case ADD_POST: {\n            let newPost = {\n                id: 5,\n                messag: action.value,\n                likes: 0\n            }\n            return {\n                ...state,\n              \n                post: [...state.post, newPost],//добавляется\n                newPostText: ''\n            }\n        }\n        case SET_USER_PROFILE: {\n            return {\n                ...state,\n                profile: action.profile\n            }\n        }\n        case SET_STATUS: {\n            return {\n                ...state,\n                status: action.status\n            }\n        }\n        case SAVE_PHOTO_SUCCESS: {\n            return {\n                ...state,\n                profile: {\n                    // @ts-ignore    игнор строки\n                    ...state.profile ,\n                    photos: action.photos\n                }\n            }\n        }\n        default:\n            return state\n    }\n\n}\ntype addPostActionCreatorActionType = {\n    type:typeof ADD_POST\n    value:string\n}\ntype setUserProfileActionType = {\n    type:typeof SET_USER_PROFILE\n    profile:string\n}\ntype setStatusActionType = {\n    type:typeof SET_STATUS\n    status:string\n}\ntype savePhotoSuccessActionType = {\n    type:typeof SAVE_PHOTO_SUCCESS\n    photos:string\n}\nexport const addPostActionCreator = (value:string):addPostActionCreatorActionType => ({ type: ADD_POST, value })\nexport const setUserProfile = (profile:string):setUserProfileActionType => ({ type: SET_USER_PROFILE, profile })\nexport const setStatus = (status:string):setStatusActionType => ({ type: SET_STATUS, status })\nexport const savePhotoSuccess = (photos:string):savePhotoSuccessActionType => ({ type: SAVE_PHOTO_SUCCESS, photos })\n\n\nexport const getUserProfile = (userId:string) => (dispatch:any) => {\n    profileAPI.getProfile(userId)\n        .then(response => {\n            dispatch(setUserProfile(response.data))\n        })\n}\n\nexport const getUserStatus = (userId:number) => (dispatch:any) => {\n    profileAPI.getStatus(userId)\n        .then(response => {\n            dispatch(setStatus(response.data))\n        })\n}\n\nexport const updateStatus = (status:string) => (dispatch:any) => {\n    profileAPI.updateStatus(status)\n        .then(response => {\n            if (response.data.resultCode === 0) {\n                dispatch(setStatus(status))\n            }\n        })\n}\nexport const savePhoto = (file:any) => async (dispatch:any) => {\n    let response = await profileAPI.savePhoto(file)\n    if (response.data.resultCode === 0) {\n        dispatch(savePhotoSuccess(response.data.data.photos))\n    }\n}\n\nexport const saveProfile = (profile:any) => async (dispatch:any, getState:any) => { ///getState корень steta\n    const userId = getState().auth.id\n    let response = await profileAPI.saveProfile(profile)\n    if (response.data.resultCode === 0) {\n        console.log(userId)\n      dispatch(getUserProfile(userId))\n    }else{\n        dispatch(stopSubmit('edit-profile', {_error: response.data.messages[0]})) // сообщение о неправильном вводе\n   \n    //    dispatch(stopSubmit('edit-profile', {'contacts':{'facebook': response.data.messages[0]}})) // сообщение о неправильном вводе\n    }\n}\nexport default prolileReducer","import React from 'react'\nimport Avatar from '@mui/material/Avatar';\nimport { useSelector } from 'react-redux';\nfunction Post(props) {\n    const myProfile = useSelector((state) => state.profilePage.profile)\n    let myImage =null\n    if(myProfile != null){ myImage =myProfile.photos.small }\n   // if( myProfile == null ){image=myProfile.pfotos.small}else{image=' https://www.meme-arsenal.com/memes/9ae8d6d24a2d9145ee6614040cd050f2.jpg'}\n    return (\n        <div style={{display: 'flex', marginTop:15 }}>\n            <Avatar alt=\"Remy Sharp\" \n            src={ myImage  } />\n            <p style={{ marginTop:5}}>{props.messag}</p>\n            <p  style={{color:\"red\", margin:' 5px 0px 0px 10px'}}>{props.likes}</p>\n        </div>\n    )\n}\n\nexport default Post\n","import s from './FormsControls.module.scss'\n\nexport const Textarea =({input,meta ,...props})=>{\n    const hasError = meta.touched && meta.error \n    return(\n        <div className={s.formControl +' '+ (hasError && s.error )} >\n           <div className=\"\">\n                <textarea className={s.oleg} {...input} {...props}></textarea>\n           </div>\n                <div className=\"\">\n                \n                    {hasError && <span>   {meta.error } </span>}\n                 \n                </div>\n        </div>\n    )\n}\n\nexport const  Input =({input,meta ,...props})=>{\n    const hasError = meta.touched && meta.error \n    return(\n        <div className={s.formControl +' '+ (hasError && s.error )} >\n           <div className=\"\">\n                <input className={s.oleg} {...input} {...props}></input>\n           </div>\n                <div className=\"\">\n                \n                    {hasError && <span>   {meta.error } </span>}\n                 \n                </div>\n        </div>\n    )\n}","import React from 'react'\nimport Post from './Post'\nimport s from './../MyPost.module.scss'\nimport { Field, reduxForm } from 'redux-form';\nimport { required,maxLength } from './../../../utils/validators';\nimport { Textarea } from './../../../FormsControls/FormsControls';\nimport {Button, } from \"react-bootstrap\";\nconst maxLength10 =maxLength(10)\nconst PostsForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n                   <Button onClick={props.handleSubmit} variant=\"outline-primary\">Добавить</Button>    \n                   <Field className={s.profilText}\n                   component={Textarea} name='posts' validate={[required, maxLength10]} placeholder='My post messenger'/>\n        </form>\n    )\n}\nconst PostsFormRedux = reduxForm({ form: 'post'})(PostsForm)\nfunction MyPosts(props) {\n    let onAddPost=(value)=>{\n        props.addPost(value.posts)\n    }\n    return (\n        <div>\n         \n            <PostsFormRedux\n            onSubmit={onAddPost}\n            />\n            <div className={s.posts}>\n                {props.post.map((elem ,index)=>{\n                    return <Post messag={elem.messag} likes={elem.likes} key={index} />\n                })}\n                \n            </div>\n        </div>\n    )\n}\n\nexport default MyPosts\n","import React from 'react'\nimport { connect } from 'react-redux';\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\nimport MyPosts from './MyPosts';\n\nconst  mapStateToProps=(state)=>{\n    return{\n        post:state.profilePage.post,\n        newPostText:state.profilePage.newPostText\n    }\n}\nconst mapDispatchToProps =(dispatch)=>{\n    return{\n        // updateNewPostText:(text)=>{\n        //     let actoin=updateNewPostTextActionCreator(text)\n        //     dispatch(actoin)\n        // },\n        addPost:(value)=>{\n            dispatch(addPostActionCreator(value))\n        }\n    }\n}\nconst MyPostsContainer= connect(mapStateToProps,mapDispatchToProps)(MyPosts)\nexport default MyPostsContainer\n\n","import React, { useState } from 'react'\nimport Prealoader from '../../common/Prealoader/Prealoader'\nimport ProfileDataFormReduxForm from './ProfileDataForm'\nimport ProfileStatus from './ProfileStatus'\nimport { Col, Row, Container, Button, FormControl } from \"react-bootstrap\";\nimport s from './../MyPost.module.scss'\nimport MyPostsContainer from '../Post/MyPostsContainer';\nlet img = 'https://tvoyaparallel.ru/wp-content/uploads/2014/09/%D0%9C%D0%B8%D0%BD%D0%B8%D0%B0%D1%82%D1%8E%D1%80%D0%B03.jpg'\nfunction ProfileInfo(props) {\n    const [editMode, setEditMode] = useState(false)\n    let onSubmit = (formData) => {\n        props.saveProfile(formData).then(\n            () => {\n                setEditMode(false)\n            }\n        )\n    }\n    let elemId\n    if (!!props.profile) { elemId = props.profile.userId } else { elemId = 0 }\n    let myElemId\n    if (!!props.profile) { myElemId = props.idUser } else { myElemId = 1 }\n    let onMainPhotoSelected = (e) => {\n        if (e.target.files.length) {\n            props.savePhoto(e.target.files[0])\n        }\n    }\n    let component\n    if (!props.profile) {\n        component = <Prealoader />\n        //false| true| 'sm'| 'md'| 'lg'| 'xl'|'xxl'\n    } else {\n        component = <Container fluid >\n\n            <Row className=' justify-content-between mt-1' >\n                <Col md=\"3\" md={{ order: 'first', offset: 0 }} sm='12' sm={{ order: \"last\", offset: 1 }} className={s.profilImg} >\n                    <img src={props.profile.photos.large || img} className={s.profil} />\n                    {myElemId == elemId && <FormControl variant=\"outline-primary\" type='file' onChange={onMainPhotoSelected} className={s.form_control} ></FormControl>}\n\n                </Col>\n                <Col md=\"8 \" md={{ order: \"last\" }} sm='12' sm={{ order: 'first' }}  >\n                    <h1 style={{ fontWeight: '500', fontSize: 20, whiteSpace: 'nowrap' }}>\n                        <span className={s.name} >Имя: </span>{props.profile.fullName}\n                        <p> <span className={s.name} >Cпециалист:</span> {props.profile.lookingForAJobDescription}</p>\n                    </h1>\n                    <div className={s.write}>Напишите, что вы хотите\n                        <ProfileStatus {...props} />\n                    </div>\n\n                </Col>\n            </Row>\n            <Row className={s.container_blok} >\n                <Col md=\"2\" md={{ order: 'first', offset: 0 }} sm='12' sm={{ order: \"last\", offset: 1 }}  >\n                    {myElemId == elemId && editMode ? <ProfileDataFormReduxForm initialValues={props.profile} {...props} onSubmit={onSubmit} toEditMode={() => setEditMode(false)} /> :\n                        <ProfileData {...props}\n                            toEditMode={() => setEditMode(true)}\n                        />}\n                </Col>\n                <Col md=\"8 \" md={{ order: \"last\" }} sm='12' sm={{ order: 'first' }}  >\n                    <MyPostsContainer />\n                </Col>\n            </Row>\n        </Container >\n    }\n    return (\n        <div>\n            {component}\n        </div>\n    )\n}\n\nconst ProfileData = (props) => {\n    return <Row className=' justify-content-between mt-1' >\n        <Col fluid>\n            {props.myElemId == props.elemId && <Button variant=\"outline-primary\" onClick={props.toEditMode}> Редоктировать </Button>}\n            <p>\n                <b> Имя</b>: {props.profile.fullName}\n            </p>\n            <p>\n                <b>  Ищу работу </b> : {props.profile.lookingForAJob ? \"yes\" : 'no'}\n            </p>\n            {props.profile.lookingForAJob && <h5> Моя профессия :{props.profile.lookingForAJobDescription}</h5>}\n            <p>\n                <b> Обо мне</b>: {props.profile.aboutMe}\n            </p>\n            <p>\n                <b> Контакты</b> : {Object.keys(props.profile.contacts).map(e => {\n                    return <Contact key={e} contactTitle={e} contactValue={props.profile.contacts[e]} />\n                })}\n            </p>\n        </Col>\n    </Row>\n}\nconst Contact = ({ contactTitle, contactValue }) => {\n    return <div className=\"\">- <b>{contactTitle}</b>: {contactValue}</div>\n}\nexport default ProfileInfo\n","import React from 'react'\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport MyPostsContainer from './Post/MyPostsContainer';\nfunction Profil(props) {\n\n    return (\n        <div >\n            <ProfileInfo\n                {...props} />\n            {/* <MyPostsContainer/> */}\n        </div>\n    )\n}\n\nexport default Profil\n","import React, { useEffect } from 'react'\nimport { connect, useDispatch } from 'react-redux'\nimport Profil from './Profil'\nimport { getUserProfile, getUserStatus, updateStatus, savePhoto,saveProfile } from './../../redux/profile-reducer';\nimport { useParams } from 'react-router-dom';\nimport { compose } from 'redux'\nimport { withAuthRedirect } from '../hoc/withAuthRedirect'; // если не авторизован шлет на авторизацию\n\nlet ProfileContainer = (props) => {\n    let { userId } = useParams();\n    if (!userId) {\n        userId = props.idUser  // если не выбран юзер выбири МЕНЯ\n    }\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(getUserProfile(userId))\n        dispatch(getUserStatus(userId))\n    }, [userId])\n    return (\n        <Profil\n            idUser={props.idUser}\n            props={props}\n            profile={props.profile}\n            status={props.status}\n            updateStatus={props.updateStatus}\n            savePhoto= {props.savePhoto}\n            saveProfile= {props.saveProfile}\n        />\n    )\n\n}\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    isAuth: state.auth.isAuth,\n    idUser: state.auth.id,\n    status: state.profilePage.status\n})\nexport default compose(\n    connect(mapStateToProps, { getUserProfile, getUserStatus, updateStatus, savePhoto,saveProfile }),\n    withAuthRedirect)(ProfileContainer) // withAuthRedirect  если не авторизован шлет на авторизацию","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport s from './../Dialog.module.scss'\nfunction DilogsItem(props) {\n\n    let path = '/dialog/' + props.id\n    return <div className={s.dialog + ' ' +(props.numID ===  props.id ? s.active : \"\")}  onClick={()=> props.setNumId(props.id)}>\n        <NavLink to={path}> \n        <img src={props.photo}/>\n         <span>{props.name}  </span> \n         <small class=\"text-muted\">{props.id} часов назад</small>\n         </NavLink>\n    </div>\n}\n\nexport default DilogsItem\n","import React from 'react'\nimport s from './../Dialog.module.scss'\nfunction Message(props) {\n    return (\n        <div className={s.message}>{props.messege}</div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport s from './../Dialog.module.scss'\nfunction WhoToFollow(props) {\n  return (\n    <div style={{padding:5}} className={s.whoToFollow} >\n        \n<img style={{paddingRight:5}} src={props.photo} alt=\"\" />\n<span>{props.name}</span>\n    </div>\n  )\n}\n\nexport default WhoToFollow","import React, { useState } from 'react'\nimport s from './Dialog.module.scss'\nimport DilogsItem from './DilogsItem/DilogsItem';\nimport Message from './Message/Message';\nimport { Navigate } from 'react-router-dom';\nimport { Field, reduxForm, reset, formValues } from 'redux-form'\nimport { Textarea } from './../../FormsControls/FormsControls';\nimport { required, maxLength } from './../../utils/validators';\nimport { Col, Row, Button } from \"react-bootstrap\";\nimport WhoToFollow from './WhotoFollow/WhoToFollow';\n\nfunction Dialog(props) {\n    const [numID, setNumId] = useState(7)\n    console.log((numID))\n    let state = props.messagesPage\n    let message = state.message.filter((elem) => { return elem.id == numID })\n    let messageElement = message.map((elem, index) => { return <Message key={index} messege={elem.messag} /> })\n    let dialogElement = state.dialogs.map((elem, index) => { return <DilogsItem setNumId={setNumId} numID={numID} name={elem.name} photo={elem.photo} id={elem.id} key={index} /> })\n    let whoToFollow =state.whoToFollow.map((elem, index) => { return <WhoToFollow name={elem.name} photo={elem.photo}  key={index} /> })\n    const addNewMessage = (value) => {\n        props.sendMessage(value.newMessageBody, numID)\n\n    }\n    if (!props.isAuth) return <Navigate to='/login' />\n\n    return (\n        <div className={s.dialogs}>\n            <Row fluid>\n                <Col lg=\"4\" className={s.dialogs__items}>\n                    {dialogElement}\n\n                </Col>\n                <Col lg=\"5\" className={s.messages}>\n                    {messageElement}\n\n                </Col>\n                <Col className={s.ElemwhoToFollow}>\n                <p style={{color:' #6d6e71'}}>Who to Follow</p>\n                {whoToFollow}\n                </Col>\n            </Row>\n            <Row fluid > \n                <Col lg={{ span: 4, offset: 4 }} >\n                    <LoginDialogForm onSubmit={addNewMessage} />\n                </Col>\n            </Row>\n        </div >\n    )\n}\n\nconst maxLength50 = maxLength(100)\nconst DialogForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field component={Textarea} className={s.profilText}\n                    validate={[required, maxLength50]}\n                    placeholder='Enter your messager'\n                    name='newMessageBody' />\n            </div><br />\n            <div>\n                <Button onClick={props.handleSubmit} variant=\"outline-primary\">Отправить</Button>\n            </div>\n        </form>\n    )\n}\n\nconst afterSubmit = (result, dispatch) => dispatch(reset('message')); // стирает введеные данные\n\nconst LoginDialogForm = reduxForm({\n    form: 'message',\n    onSubmitSuccess: afterSubmit,\n})(DialogForm)\n\nexport default Dialog\n\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Field, reduxForm } from 'redux-form'\nimport { Input } from '../../FormsControls/FormsControls'\nimport { required ,maxLength} from '../../utils/validators'\nimport { login } from './../../redux/auth-reducer';\nimport {Navigate  } from \"react-router-dom\";\nimport {Button, } from \"react-bootstrap\";\nimport s from './../../FormsControls/FormsControls.module.scss'\n\nconst maxLength50 =maxLength(20)\nconst LoginForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div className=\"\">\n                <Field  component={Input} validate={[required, maxLength50]} type=\"text\" name='email'  placeholder='Email' className={s.login}/>\n            </div>\n            <div className=\"\">\n                <Field  component={Input} validate={[required, maxLength50]} type=\"password\" name='password' placeholder='Password' className={s.login}/>\n            </div>\n            <div className=\"\">\n                <Field   component={Input} validate={[required, maxLength50]} type=\"checkbox\" name='rememberMe' /> remember me\n            </div>\n            {props.error && <div className={s.formSumaryEror}>{props.error}</div>}\n            {props.captchaUrl && <div className=\"\">\n                <img src={props.captchaUrl } alt=\"\" />\n                <Field  component={Input} validate={[required]} type=\"text\" name='captcha'  placeholder='Captcha' />\n            </div>  }\n            <div className=\"\">\n            <Button onClick={props.handleSubmit} variant=\"outline-primary\">\n                    Login\n                </Button>\n            </div>\n            Email/  p132@ro.ru\n            Password/ 123456778\n        </form>\n    )\n}\n\nconst LoginReduxForm = reduxForm({\n    form: 'login'\n})(LoginForm)\n\nconst LoginContainer = (props) => {\n    const onSubmit=(formData)=>{\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\n    }\n   if( props.isAuth)  {\n    return <Navigate  to='/profile/21413'/>}\n    return (\n        <div>\n            <h1>Login</h1>\n            <LoginReduxForm \n            captchaUrl={props.captchaUrl}\n            onSubmit={onSubmit}\n            />\n\n        </div>\n    )\n}\n\nconst mapStateToProps =(state)=> {\n    return{\n    isAuth:state.auth.isAuth,\n    captchaUrl: state.auth.captchaUrl\n    }\n}\nexport default connect(mapStateToProps , {login}) (LoginContainer)\n","import { getAuth } from \"./auth-reducer\"\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED-SUCCESS'\n\ntype initialStateType={\n    initialized:boolean\n}\n\nlet initialState:initialStateType = {\n    initialized: false\n}\n\nconst appReduser = (state = initialState, action:any):initialStateType => {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS: {\n            return {\n                ...state,\n                initialized:true\n            }\n        }\n        default:\n            return state\n    }\n}\ntype initializedSuccessActionType = {\n    type: typeof INITIALIZED_SUCCESS\n}\nexport const initializedSuccess = ():initializedSuccessActionType   => ({ type: INITIALIZED_SUCCESS})\nexport const initializApp = () =>(dispatch:any) => {\n    let promise = dispatch(getAuth()) // оборачиваю функцию в переменную  \n    Promise.all([promise])            // асинхроно ждем когда пройдут все переменный в массиве(обурнутые функции [.., .., .]) \n    .then(()=>{\n        dispatch(initializedSuccess()) // после отработки всех функций сделай это\n    })\n    }\n\nexport default appReduser","import React from 'react'\nimport s from './Footer.module.scss'\nimport { Col, Row, Container } from \"react-bootstrap\";\n//false| true| 'sm'| 'md'| 'lg'| 'xl'|'xxl'\nconst elemText = [\n  {\n    title: 'Для физических лиц',\n    reference: ['Зарегистрироваться',\n      'Aвторизоваться',\n      ' Проводить исследования',\n      ' Приложение для поиска',\n      ' Функции',\n      ' Языковые настройки'\n    ]\n  }, {\n    title: 'Для бизнеса',\n    reference: ['Регистрация бизнеса',\n      'Бизнес-логин',\n      'Преимущества',\n      'Ресурсы',\n      'Рекламировать',\n      'Настраивать'\n    ]\n  }, {\n    title: 'О нас',\n    reference: ['О нас',\n      'Связаться с нами',\n      'Политика конфиденциальности',\n      'Условия',\n      'Помощь',\n    ]\n  }, {\n    title: 'Связаться с нами',\n    reference: ['8 (846) 332-64-22',\n      'info@tinf-team.com',\n      '443010 РФ Самара На Дне '\n    ]\n  }\n]\nfunction Footer() {\n  return (<div className={s.footer}>\n\n\n    <Container fluid=\"lg\"  >\n      <Row className=' p-4'>\n        <Col md=\"2\" sm='12' >\n          <img src=\"\thttps://themified.com/friend-finder/images/logo-black.png\" alt=\"\" />\n          <div ></div>\n        </Col  >\n        {elemText.map(e => <Col md=\"2\" sm='6' key={e}>\n          <ul>\n            <li>{e.title}</li>\n            {e.reference.map(r=> <li key={r}> {r}</li>)}\n          </ul>\n        </Col  >)\n\n        }\n    \n\n      </Row >\n    </Container  >\n    <div className={s.copyright}>\n      <p>Thunder Team © 2016. All rights reserved</p>\n    </div>\n  </div>\n\n  )\n}\n\nexport default Footer","const SEND_MESSAGE = 'SEND-MESSAGE'\ntype DialogType ={\n    id:number\n    name:string\n    photo:string\n}\ntype MessageType={\n    id:number\n    messag:string\n}\nlet initialState = {\n    dialogs: [\n        { id: 7, name: 'Dimi', photo: 'https://themified.com/friend-finder/images/users/user-2.jpg' },\n        { id: 10, name: 'Aнна', photo: 'https://themified.com/friend-finder/images/users/user-10.jpg' },\n        { id: 9, name: 'Света', photo: 'https://themified.com/friend-finder/images/users/user-3.jpg' },\n        { id: 15, name: 'Viktor', photo: 'https://themified.com/friend-finder/images/users/user-4.jpg' },\n    ] as Array<DialogType>,   //воспринимай dialogs как массив  состоящий из параметров DialogType\n    message: [\n        { id: 15, messag: 'HI' },\n        { id: 10, messag: 'HOW' },\n        { id: 9, messag: 'YO' },\n        { id: 7, messag: '   В порядке прекрасно. Спасибо' },\n    ] as Array<MessageType>,  //воспринимай message как массив  состоящий из параметров MessageType\n    whoToFollow: [\n        {\n            name: 'Коля',\n            photo: 'https://themified.com/friend-finder/images/users/user-12.jpg'\n        },\n        {\n            photo: 'https://themified.com/friend-finder/images/users/user-11.jpg',\n            name: 'Галя Меег'\n        },\n        {\n            name: 'Соня Даль',\n            photo: 'https://themified.com/friend-finder/images/users/user-15.jpg'\n        },\n        {\n            name: 'Jim ',\n            photo: 'https://themified.com/friend-finder/images/users/user-14.jpg'\n        },\n        {\n            name: 'Боря',\n            photo: '\thttps://themified.com/friend-finder/images/users/user-13.jpg'\n        }\n    ]\n\n}\nexport type initialStateType = typeof initialState // берем тип из state\nconst dialogReducer = (state = initialState, action:any):initialStateType => {\n\n    switch (action.type) {\n        case SEND_MESSAGE:\n            let body = action.newMessageBody\n            let numID = action.numID\n\n            // return{ ...state,\n            //      message:[...state.message,{ id: 6, messag: body }],//добавляется\n            //      }\n            return {\n                ...state,\n              // @ts-ignore    игнор строки\n                message: [state.message.filter(e => e.id === numID), ...state.message, { id: numID, messag: body }],//добавляется\n            }\n        default:\n            return state\n    }\n}\ntype sendMesssageCreatorAcyionType = {\n    type : typeof SEND_MESSAGE\n    newMessageBody: string\n    numID:number\n}\nexport const sendMesssageCreator = (newMessageBody:string, numID:number):sendMesssageCreatorAcyionType => ({ type: SEND_MESSAGE, newMessageBody, numID })\n\n\nexport default dialogReducer","import { compose } from 'redux'\nimport { sendMesssageCreator, updateNewMessageBodyCreator } from '../../redux/dialogs-erducer';\nimport Dialog  from './Dialog';\nimport { connect } from 'react-redux';\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';// если не авторизован шлет на авторизацию\nlet mapStateTopProps=(state)=>{\n    return{\n        messagesPage :state.messagesPage,\n        isAuth: state.auth.isAuth\n    }\n}\nlet mapDispatchTopProps=(dispatch)=>{\n    return{\n        sendMessage:(newMessageBody , numID)=>{\n            dispatch(sendMesssageCreator(newMessageBody , numID))},\n    // updateNewMessageBody:(body)=>{  \n    //     dispatch(updateNewMessageBodyCreator(body))}\n}}\n\nexport default compose (\n    connect(mapStateTopProps,mapDispatchTopProps),\n    withAuthRedirect  // withAuthRedirect  если не авторизован шлет на авторизацию\n)(Dialog)","//  https://preview.themeforest.net/item/friend-finder-social-network-html5-template/full_screen_preview/18711273?_ga=2.207235098.800517857.1613985706-59363158.1613985207\n\nimport './App.css';\nimport { Header, Navbar, ProfileContainer, LoginContainer, initializApp, Footer } from './components/index';\nimport { Routes, Route } from \"react-router-dom\";\nimport DialogContainer from './components/Dialog/DialogContainer';\nimport { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Prealoader from './components/common/Prealoader/Prealoader';\nimport loadable from '@loadable/component'\nimport { Col, Row, Container } from \"react-bootstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst UsersContainer = loadable(() => import('./components/Users/UsersContainer'))// загрузка сайта становиться быстрей(компонент компилируется только после нажатии )\n\nfunction App(props) {\n//false| true| 'sm'| 'md'| 'lg'| 'xl'|'xxl'\n  useEffect(() => {\n    props.initializApp() // ждем когда прогрузиться разметка или показываю \"ожидание\"\n  }, [])\n  if (!props.initialized) {\n    return <Prealoader />\n  }\n  return <div className=\"App\">\n    <Header />\n    <Container fluid=\"lg\"  >\n        <Row className=' justify-content-between  mt-5'>\n        <Col  md=\"3\" >\n          <Navbar />\n        </Col>\n        <Col   md=\"9\" >\n          <Routes>\n            <Route path=\"/\" element={<ProfileContainer />} />  {/*  \"/\" при пустом вводе отправляет на указаннную страницу  */}\n            <Route exact path=\"/profile/:userId\" element={<ProfileContainer />} />  {/*:userId +useParams позволяет отслеживать введеные параметры в строке */}\n            <Route path=\"/dialog/*\" element={<DialogContainer />} />\n            <Route path=\"/users/*\" element={<UsersContainer />} />\n            <Route path=\"/login/*\" element={<LoginContainer />} />\n            <Route path=\"*\" element={<h1>404 NOT FOUND</h1>} />  {/*при неизвестном адресе отобази ЭТО */}\n          </Routes>\n        </Col>\n      </Row>\n    </Container>\n    <Footer/>\n  </div>\n}\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized\n})\nexport default connect(mapStateToProps, { initializApp })(App);\n\n\n\n\n// <div className=\"App\">\n//     <Header />\n//     <div className=\"conteiner\">\n//       <Navbar />\n//       <div className=\"profile\">\n//         <Routes>\n//           <Route path=\"/\" element={<ProfileContainer />} />  {/*  \"/\" при пустом вводе отправляет на указаннную страницу  */}\n//           <Route exact path=\"/profile/:userId\" element={<ProfileContainer />} />  {/*:userId +useParams позволяет отслеживать введеные параметры в строке */}\n//           <Route path=\"/dialog/*\" element={<DialogContainer />} />\n//           <Route path=\"/users/*\" element={<UsersContainer />} />\n//           <Route path=\"/login/*\" element={<LoginContainer />} />\n//           <Route path=\"*\" element={<h1>404 NOT FOUND</h1>} />  {/*при неизвестном адресе отобази ЭТО */}\n//         </Routes>\n//       </div>\n//     </div>\n\n//   </div>"," let intialState={}\n const sidebarReducer=(state=intialState, action)=>{\n\n    return state\n}\n\nexport default sidebarReducer","import { applyMiddleware, combineReducers, createStore } from 'redux';\nimport authReduser from './auth-reducer';\nimport { composeWithDevTools } from 'redux-devtools-extension'// ПРИЛОЖЕНИЕ ДЛЯ ОТЛОВА \n\nimport dialogReducer from './dialogs-erducer';\nimport prolileReducer from './profile-reducer';\nimport sidebarReducer from './sidebar-reducer';\nimport userReduser from './users-reducer';\nimport thunkMiddleware from 'redux-thunk'\nimport { reducer as formReducer } from 'redux-form'\nimport appReduser from './app-reducer';\n\nlet reducers = combineReducers({\n    profilePage: prolileReducer,\n    messagesPage: dialogReducer,\n    sidebar: sidebarReducer,\n    usersPage: userReduser,\n    auth: authReduser,\n    app:appReduser,\n    form: formReducer\n})\nconst composedEnhancer = composeWithDevTools(\n       applyMiddleware(thunkMiddleware)\n  )\nlet store = createStore(reducers,\n    composedEnhancer)\nwindow.store = store\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\"\nimport store from './redux/redux-store'\n// let renderEntierThree = (state) => {\n  ReactDOM.render(\n      <BrowserRouter>\n      <Provider store={store}>\n        <App/>\n        </Provider>\n      </BrowserRouter>,\n    document.getElementById('root')\n  );\n// }\n// renderEntierThree(store.getState())\n\n// store.subscribe(()=>{\n//   let state = store.getState()\n//   renderEntierThree(state)\n// })// Перезагрузка\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"MyPost_post__vgt-1\",\"profil\":\"MyPost_profil__wzg-k\",\"name\":\"MyPost_name__2d5a3\",\"profilImg\":\"MyPost_profilImg__1vmez\",\"form_control\":\"MyPost_form_control__pNMBb\",\"write\":\"MyPost_write__3Sb3I\",\"s\":\"MyPost_s__3BtKq\",\"container_blok\":\"MyPost_container_blok__3Xsqq\",\"profilText\":\"MyPost_profilText__1cySl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2EyPL\",\"error\":\"FormsControls_error__rTt0C\",\"formSumaryEror\":\"FormsControls_formSumaryEror__3n_14\",\"login\":\"FormsControls_login__2xjdh\"};","let Prealoader=(props)=>{\nreturn  <img src='https://flyclipart.com/thumb2/image-934460.png'/>\n}\n\nexport default Prealoader","import { usersAPI } from \"../api/api\"\nimport { UserType } from \"./types/types\"\n\nconst FOLLOW='FOLLOW'\nconst UNFOLLOW='UNFOLLOW'\nconst SET_USERS='SET-USERS'\nconst CURENT_PAGE='CURENT-PAGE'\nconst USERS_COUNT='USERS-COUNT'\nconst TOGLE_IS_FETCHING='TOGLE-IS-FETCHING'\nconst TOGLE_IS_FETCHING_PROGRESS='TOGLE-IS-FETCHING-PROGRESS'\n\nlet initialState={\nusers:[] as Array<UserType>,\npageSize:5,\ntotalUsersCount:0,\ncurentPage:1,\nisFetching:false,\nfollowingInProgress: [] as Array<number>  // воспринемай как массив \"id\" пользавателей\n}\ntype initialStateType = typeof initialState\n\nconst userReduser=(state=initialState, action:any):initialStateType=>{\n    switch(action.type){\n        case FOLLOW:{\n            return{\n                ...state,\n                users: state.users.map(u=>{\n                    if(u.id === action.userId){\n                        return{ ...u, followed:true}\n                    }\n                    return u\n                })\n            }\n        }\n        case UNFOLLOW:{\n            return{\n                ...state,\n                users: state.users.map(u=>{\n                    if(u.id === action.userId){\n                        return{ ...u , followed:false}\n                    }\n                    return u\n                })\n            }\n        }\n        case SET_USERS:{\n            return{\n                ...state,\n                users:action.users\n             //   users:[...state.users ,...action.users]  // добавляет к старомк массиву\n            }\n        }\n        case CURENT_PAGE:{\n            return{\n                ...state,\n                curentPage: action.num\n            }\n        }\n        case USERS_COUNT:{\n            return{\n                ...state,\n                totalUsersCount:action.num\n            }\n        }\n        case TOGLE_IS_FETCHING:{\n            return{\n                ...state,\n                isFetching: action.isFetching\n            }\n        }\n        case TOGLE_IS_FETCHING_PROGRESS:{\n            return{\n                ...state,\n                followingInProgress : action.isFetching ?\n                [...state.followingInProgress , action.userId]\n                : state.followingInProgress.filter(id=> id !== action.userId )\n            }\n        }\n        default:\n            return state\n    }\n}\nexport const followSucces = (userId:number) =>({type: FOLLOW,    userId})\nexport const unfollowSucces=(userId:number) =>({type: UNFOLLOW,  userId})\nexport const setUsers=(users:any)  =>({type: SET_USERS, users})\nexport const curentPages=(num:number ) =>({type: CURENT_PAGE, num})\nexport const setTotalUsersCount=(num:number)  =>({type: USERS_COUNT, num})\nexport const toggleIsFetching=(isFetching:boolean)=>({type:TOGLE_IS_FETCHING ,isFetching})\nexport const toggleIsFetchingProgress=(isFetching:boolean,userId:number)=>({type:TOGLE_IS_FETCHING_PROGRESS ,isFetching,userId})\n\nexport const getUsers=(curentPage:number,  pageSize:number)=>{\n    return (dispatch:any)=>{\n        toggleIsFetching(true)\n        dispatch(curentPages(curentPage))\n        usersAPI.getUsers(curentPage,  pageSize)\n            .then(data => {\n                dispatch(toggleIsFetching(false))\n                dispatch(setUsers(data.items))\n                dispatch(setTotalUsersCount(data.totalCount))\n            })\n    }\n}\n\nexport const follow=(userId:number)=>{\n    return (dispatch:any)=>{\n        dispatch(toggleIsFetchingProgress(true,userId))\n        usersAPI.follow(userId)\n        .then(response => {\n            if(response.data.resultCode === 0 ){\n                dispatch(followSucces(userId))\n            }\n            dispatch(toggleIsFetchingProgress(false, userId))\n        })\n\n        dispatch(followSucces(userId))\n    }\n}\n\nexport const unfollow=(userId:number)=>{\n    return (dispatch:any)=>{\n        dispatch(toggleIsFetchingProgress(true,userId))\n        usersAPI.unfollow(userId)\n        .then(response => {\n            if(response.data.resultCode === 0 ){\n                dispatch(unfollowSucces(userId))\n            }\n            dispatch(toggleIsFetchingProgress(false, userId))\n        })\n\n        dispatch(unfollowSucces(userId))\n    }\n}\n\nexport default userReduser","import { Navigate } from 'react-router-dom';\nimport React from 'react'\nexport let withAuthRedirect=(Component) =>{  // если не авторизован шлет на авторизацию\n     class RedirectComponent extends React.Component {\n    render(){\n         if(!this.props.isAuth )return <Navigate to='/login'/>\n         return <Component {...this.props}/>\n    }   \n}  \nreturn RedirectComponent\n   } \n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photo\":\"users_photo__1cANG\",\"curentPage\":\"users_curentPage__3EIZH\",\"user\":\"users_user__qzhkq\",\"pagination\":\"users_pagination__3Azpv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"conteiner\":\"Navbar_conteiner__3p_uh\",\"conteiner__elem\":\"Navbar_conteiner__elem__351pI\",\"active\":\"Navbar_active__21R_N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__uPmpO\",\"error\":\"FormsControls_error__188cE\",\"formSumaryEror\":\"FormsControls_formSumaryEror__227OH\"};"],"sourceRoot":""}